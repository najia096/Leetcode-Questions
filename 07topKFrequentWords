'''
#692.Given an array of strings words and an integer k, return the k most frequent strings.

Return the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their lexicographical order.

Example 1:
Input: words = ["i","love","leetcode","i","love","coding"], k = 2
Output: ["i","love"]
Explanation: "i" and "love" are the two most frequent words.
Note that "i" comes before "love" due to a lower alphabetical order.

Example 2:
Input: words = ["the","day","is","sunny","the","the","the","sunny","is","is"], k = 4
Output: ["the","is","sunny","day"]
Explanation: "the", "is", "sunny" and "day" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.
 

#leetcode link: https://leetcode.com/problems/top-k-frequent-words/description/
'''

'''
Time Complexity: O(n) 
Space Complexity: O(n)
'''

'''
For the solution,
We will first sort the list based on the frequencies and alphabatical order

'''

class Solution:
    def topKFrequent(self, words: List[str], k: int) -> List[str]:
        word_dict = {}

        for word in words:
            if word not in word_dict:
                word_dict[word] = 1
            else:
                word_dict[word] += 1
        sorted_by_freqAlpha = sorted(word_dict.items(), key=lambda item: (-item[1], item[0]))
        print(sorted_by_freqAlpha)
        
        result = []
        for i in range(k):
            result.append(sorted_by_freqAlpha[i][0])

        return result

            
        
        
